#!/usr/bin/env node

const needle = require('needle');
const path = require('path');
const logfile = path.resolve(__dirname, '../.logs/coinhook.log');
const config = require('../src/config');
const crypto = require('crypto');

const fs = require('fs-extra');
const hook = config.get('hook');
fs.ensureFileSync(logfile);

if (!hook) {
  fs.appendFileSync(logfile, 'Hook api not found');
  process.exit(0);
}
if (process.argv.length < 5) {
  fs.appendFileSync(logfile, `Got ${process.argv.length} arguments (not 5)`);
  process.exit(1);
}
const TRX = process.argv[2];
const COIN = process.argv[3];
const SECRET = process.argv[4];
const postData = JSON.stringify({ tx: TRX, coin: COIN });
const HMACSIG = crypto.createHmac('sha1', SECRET).update(postData).digest('hex');

const options = {
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': Buffer.byteLength(postData),
    'X-Coinworks-Sig': HMACSIG,
    'User-Agent': 'Coinworks-WebHook'
  }
};
needle.post(hook.host, postData, options, (err, resp) => {
  if (err) {
    fs.appendFileSync(logfile, `problem with request: ${err.message}`);
  } else {
    fs.appendFileSync(logfile, `successful request: ${JSON.stringify(resp.body)}`);
  }
});
